# -*- coding: utf-8 -*-
"""Tensor Coordinate Transformation

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fnqkaaj3dNXz2XpQ5aEB-R5OWmF2s4d_
"""

import numpy as np
import math 

def a_matrix(a):
  a_matrix = np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]])
  new_old = np.zeros((3,3))

  new_old[0, 0] = math.radians(a)
  new_old[0, 1] = math.radians(90) - math.radians(a)
  new_old[0, 2] = math.radians(90)
  new_old[1, 0] = math.radians(90) + math.radians(a)
  new_old[1, 1] = math.radians(a)
  new_old[1, 2] = math.radians(90)
  new_old[2, 0] = math.radians(90)
  new_old[2, 1] = math.radians(90)
  new_old[2, 2] = 0 
  for x in range(3):
    for y in range(3):
      a_matrix[x, y] = np.round(math.cos(new_old[x, y]), 2)
  return a_matrix, np.transpose(a_matrix)

def new_first_rank_tensor(theta, old_first_rank):
  k, T_k = a_matrix(theta)
  return np.dot(k, old_first_rank)

def new_second_rank_tensor(theta, old_second_rank):
  k, T_k = a_matrix(theta)
  return np.dot(k, np.dot(old_second_rank, T_k))

z = new_second_rank_tensor(30, np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))
print(z)

import numpy as np

arr1 = np.array([[1, 2, 3],
                 [3, 4, 5],
                  [5, 6, 7]])

arr2 = np.array([[5],
                  [6],
                  [7]])

arr_result = np.dot(arr1, arr2)
arr_result1 = np.matmul(arr1, arr2)

print(arr_result)
print(arr_result1)