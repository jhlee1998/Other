# -*- coding: utf-8 -*-
"""2D Matter Tensor in Particular Direction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eAO0kEn_aQMcHabrghWSFWrJ_55kwvc9
"""

import numpy as np

def new_hkl_tensor_2D(a, b):
  # a is hkl direction
  # b is 2D matter tensor in original coordinate
  x = (a[0]**2 + a[1]**2 + a[2]**2)**(1/2)
  c = np.array([[a[0]/x, a[1]/x, a[2]/x],[0,0,0],[0,0,0]])
  c_T = np.array([[a[0]/x,0,0], [a[1]/x,0,0], [a[2]/x,0,0]])
  d = np.dot(c, np.dot(b, c_T))
  return d[0, 0]

def new_hkl_flux(a, b, c):
  # a is hkl direction
  # b is 2D matter tensor in original coordinate
  # c is 1D field tensor concentration gradient given
  y = new_hkl_tensor_2D(a, b)
  dc = np.dot(a, c)
  z = y * dc
  return z

h_k_l = list((7, 5, 3))
diffusivity = np.array([[2, 0, 0], [0, 2, 0], [0, 0, 2]])
gradient = np.array([[3], [3], [3]])
e = new_hkl_flux(h_k_l, diffusivity, gradient)
print(e)